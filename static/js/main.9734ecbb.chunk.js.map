{"version":3,"sources":["img/maintenance.jpg","img/logo-white.png","logo.svg","layout/Header/index.js","base/Animation/index.js","base/Typography/index.js","pages/Home/index.js","pages/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","styled","div","_templateObject","img","Header__logo_box","_templateObject2","Header__logo","_templateObject3","Header__text_box","_templateObject4","moveInRight","keyframes","Animation_templateObject","moveInLeft","Animation_templateObject2","Animation_templateObject3","HeadingPrimary","h1","Typography_templateObject","HeadingPrimary__main","span","Typography_templateObject2","HeadingPrimary__sub","Typography_templateObject3","Home","react_default","a","createElement","src","logo","style","color","React","Component","App","className","pages_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oHCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,ghECGjC,IAAMC,EAASC,IAAOC,IAAVC,IAMTC,IAkBQA,KASLC,EAAmBJ,IAAOC,IAAVI,KAahBC,EAAeN,IAAOG,IAAVI,KASZC,EAAmBR,IAAOC,IAAVQ,uxBCxDtB,IAAMC,EAAcC,YAAHC,KAgBXC,EAAaF,YAAHG,KAgBKH,YAAHI,g4BC/BlB,IAAMC,EAAiBhB,IAAOiB,GAAVC,KAOdC,EAAuBnB,IAAOoB,KAAVC,IAMXR,GAaTS,EAAsBtB,IAAOoB,KAAVG,IAKfb,oBChCFc,mLCOP,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC5B,EAAD,KACI0B,EAAAC,EAAAC,cAACvB,EAAD,KACIqB,EAAAC,EAAAC,cAACrB,EAAD,CAAcsB,IAAKC,OAEvBJ,EAAAC,EAAAC,cAACnB,EAAD,KACIiB,EAAAC,EAAAC,cAACX,EAAD,KACIS,EAAAC,EAAAC,cAACR,EAAD,2BACAM,EAAAC,EAAAC,cAACL,EAAD,qBACiBG,EAAAC,EAAAC,cAAA,QAAMG,MAAO,CAAEC,MAAO,YAAtB,KADjB,YAC0EN,EAAAC,EAAAC,cAAA,QAAMG,MAAO,CAAEC,MAAO,YAAtB,iBAZnFC,IAAMC,WCsBVC,mLAtBX,OACET,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,OAebV,EAAAC,EAAAC,cAACS,EAAD,cAlBUH,aCOEI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlB,EAAAC,EAAAC,cAACiB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9734ecbb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/maintenance.5f9ca9eb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.96979723.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import styled from 'styled-components';\nimport img from '../../img/maintenance.jpg'\n\nexport const Header = styled.div`\n    height: 95vh;\n    background-image: linear-gradient(\n        to right bottom,\n        rgba(68, 70, 73, 0.8),\n        rgba(39, 60, 180, 0.8)),\n    url(${img});\n    background-size: cover;\n    background-position: top;\n    position: relative;\n\n    @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {\n        -webkit-clip-path: polygon(0 0, 100% 3vh, 100% 100%, 0 100%);\n        clip-path: polygon(0 0, 100% 3vh, 100% 100%, 0 100%);\n        height: 90vh;\n    }\n    \n    @media (min-width: 192dpi) and (min-width: 37.5em),\n        only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),\n        only screen and (min-width: 125em) {\n            background-image: linear-gradient(\n                to right bottom,\n                rgba(68, 70, 73, 0.8),\n                rgba(39, 60, 180, 0.8)),\n            url(${img});\n        }\n        \n    @media only screen and (max-width: 37.5em) {\n        -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);\n        clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);\n    }\n`;\n\nexport const Header__logo_box = styled.div`\n    position: absolute;\n    top: 1rem;\n    left: 1rem;\n    \n    @media only screen and (max-width: 37.5em) {\n        /* top: .1rem;\n        left: .1rem; */\n        position: relative;\n        margin: 0 auto;\n    }\n`;\n\nexport const Header__logo = styled.img`\n    height: 15rem;\n\n    @media only screen and (max-width: 37.5em) {\n        margin-top: 10rem;\n        height: 10rem;\n    }\n`;\n\nexport const Header__text_box = styled.div`\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n`;","import styled, { keyframes } from 'styled-components';\n\nexport const moveInRight = keyframes`\n    0% {\n        opacity: 0;\n        transform: translateX(10rem);\n    }\n\n    80% {\n        transform: translateX(-1rem);\n    }\n\n    100% {\n        opacity: 1;\n        transform: translate(0)\n    }\n`;\n\nexport const moveInLeft = keyframes`\n    0% {\n        opacity: 0;\n        transform: translateX(-10rem);\n    }\n\n    80% {\n        transform: translateX(1rem);\n    }\n\n    100% {\n        opacity: 1;\n        transform: translate(0)\n    }\n`;\n\nexport const moveInBottom = keyframes`\n    0% {\n        opacity: 0;\n        transform: translateY(3rem);\n    }\n\n    100% {\n        opacity: 1;\n        transform: translate(0)\n    }\n`;","import styled from 'styled-components';\nimport { moveInLeft, moveInRight } from '../Animation';\n\nexport const HeadingPrimary = styled.h1`\n    color: #fff;\n\n    backface-visibility: hidden;\n    margin-bottom: 6rem;\n`;\n\nexport const HeadingPrimary__main = styled.span`\n    display: block;\n    font-size: 6rem;\n    font-weight: 400;\n    letter-spacing: 3.5rem;\n\n    animation-name: ${moveInLeft};\n    animation-duration: 1s;\n    animation-timing-function: ease-out;\n\n    /* @include respond(phone {\n\n    }) */\n    @media only screen and (max-width: 37.5em) {\n        letter-spacing: 1rem;\n        font-size: 3rem\n    }\n`;\n\nexport const HeadingPrimary__sub = styled.span`\n    display: block;\n    font-size: 2rem;\n    font-weight: 800;\n    letter-spacing: 1rem;\n    animation: ${moveInRight} 1s ease-out;\n\n    @media only screen and (max-width: 37.5em) {\n        letter-spacing: .5rem;\n        font-size: 1rem;\n    }\n`;","import Home from './Home';\n\nexport default Home;","import React from 'react';\n\nimport { Header, Header__logo_box, Header__logo, Header__text_box } from '../../layout/Header';\nimport { HeadingPrimary, HeadingPrimary__main, HeadingPrimary__sub } from '../../base/Typography';\n\nimport logo from '../../img/logo-white.png'\n\nclass Home extends React.Component {\n    render() {\n        return(\n            <div>\n                <Header>\n                    <Header__logo_box>\n                        <Header__logo src={logo} />\n                    </Header__logo_box>\n                    <Header__text_box>\n                        <HeadingPrimary>\n                            <HeadingPrimary__main>UNDER CONSTRUCTION</HeadingPrimary__main>\n                            <HeadingPrimary__sub>\n                                Coming soon, <span style={{ color: '#1866e2' }}>&#123;</span>withStyle<span style={{ color: '#1866e2' }}>&#125;</span>\n                            </HeadingPrimary__sub>\n                        </HeadingPrimary>\n                    </Header__text_box>\n                </Header>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './pages/Home';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header> */}\n        <Home />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}